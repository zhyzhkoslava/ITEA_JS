const Demo = () => {

  /*
    Основываясь на понимании лексического окружения попробуем реализовать
    самое простое замыкание.
  */

  const ClosureFunc = () =>  {
    let i = 10;
    console.log(i)
    return (arg) => i;
  }

  const AnotherClousureFunc = () => {
    let i = 20;
    // func()() -> Вызов возвращаемой функции
    console.log( ClosureFunc()() );
  }

  /*
    Почему так происходит?
    Функция ClosureFunc при инициализации хранит в себе значение переменной i.
    Так же при возвращении результата - функция которую мы возвращаем будет
    ссылатся на это же значение.
    Т.е значение переменной ЗАМЫКАЕТСЯ в пределах функции в которой она была
    объявленна.
  */
  AnotherClousureFunc();

  /*
    Таки что такое замыкание?
    Замыкания это комбинация функции и лексического окружения в котором
    эта функция была объявленна.
  */
}

document.addEventListener('DOMContentLoaded', Demo);
